#!/usr/bin/python

import os
import shutil
import subprocess
import sys

if len(sys.argv) == 1:
	kWork = os.path.join('deps', sys.platform)
elif len(sys.argv) == 2:
	kWork = sys.argv[1]

if not os.path.isdir(kWork):
	os.makedirs(kWork)
os.chdir(kWork)

kUvRepository = 'https://github.com/libuv/libuv.git'
kUvBranch = 'v1.0.0'
kUvWork = 'uv'

clean = False

# libuv
print 'libuv'
print

if not os.path.isdir(kUvWork):
	subprocess.check_call(['git', 'clone', '--branch', kUvBranch, kUvRepository, kUvWork])
if sys.platform in ('darwin', 'win32'):
	if not os.path.isdir(os.path.join(kUvWork, 'build', 'gyp')):
		subprocess.check_call(['git', 'clone', 'https://chromium.googlesource.com/external/gyp.git', 'build/gyp'], cwd=kUvWork)
if clean:
	if os.path.isdir(os.path.join(kUvWork, 'out')):
		shutil.rmtree(os.path.join(kUvWork, 'out'))

if sys.platform == 'linux2':
	subprocess.check_call(['./gyp_uv.py', '-f', 'make'], cwd=kUvWork)
	subprocess.check_call(['make', '-j8', '-C', 'out'], cwd=kUvWork)
elif sys.platform == 'darwin':
	subprocess.check_call(['./gyp_uv.py', '-f', 'xcode'], cwd=kUvWork)
	subprocess.check_call(['xcodebuild', '-ARCHS="x86_64"', '-project', 'uv.xcodeproj', '-configuration', 'Release', '-target', 'All'], cwd=kUvWork)
elif sys.platform == 'win32':
	env = os.environ.copy()
	env['VCINSTALLDIR'] = ''
	env['WINDOWSSDKDIR'] = ''
	subprocess.check_call(['cmd', '/C', 'call', 'vcbuild.bat', 'release', 'x64'], cwd=kUvWork, env=env)
