Thoughts:

= Things it should be easy to do: =
 * Send a message
 * Receive a message (register to receive messages, whatever)

Would it be useful is the tasks could send a message to system when they start?

In particular, I'm thinking about the "tasks" page not updating when you click on a button.
system could broadcast out status update messages, so 'tasks' could listen for them and update.
Other tasks could listen for e.g. newly created tasks or track uptime, etc.
----
Yes.  It's not reflected well anywhere right now, but the "system" task is the parent of all other tasks.  parent.invoke(message); sends message to "system".  If message.to is set, system will forward it on to that task.  Any task that implements onMessage will receive messages.  There was a {action: "taskStarted", taskName: "foo"} message that I used so that the "httpd" task knew about all of the other tasks that could handle HTTP requests.  I hooked up updateTaskStatus too, now.  I haven't explored what my options are, but I'm sure this can be be streamlined.  One thing I know I can do is expose exported functions from one task to another as first-class objects.  They will all do essentially the same thing that's happening now, and they will all be asynchronous, but it will be less awkward to type.

Unfortunately I think I have to do some security things first, having this all out on a public web server.  I will do something with accounts and permissions shortly so that Joe Internet can't modify the "tasks" package except by cloning it first.

-Cory
----
It sounds really similar to [https://medium.com/message/tilde-club-i-had-a-couple-drinks-and-woke-up-with-1-000-nerds-a8904f0a2ebf tilde club]. Sort of an evolution of it. Was that an inspiration?

I did figure our parent.invoke, but too late--I had already wedged something.

In a desperate attempt to get things to work, I attempted making some clones of things, but I think I just made a mess of everything.

Honestly, doing something like
{{{
parent.invoke({
    to: "whomever",
    content: "whatever",
})
}}}
isn't '''that''' bad.
But a simpler way to register/respond would be great.
I think what it calls for is a standard library.
Being able to do something like replyOK(json_object) or replyOK(text) would be a lot better than typing out the HTTP response code in every package.

''--Clayton''

----
I had never heard of tilde club.  I like the sound of that.  That's pretty much how we ran things in college, so maybe indirectly it is.

> ''What if we just built some tiny tools on top of Unix so tilde.club could somehow be used to supplant-even just a little-the commercial social networks of today?''
That's what I'm talking about.  Except a little C++ program with a lot of little bits of javascript can easily do the same thing on Windows and Android phones and smart watches and ...

I made a way to call functions across tasks.  The implementation broke my brain, and it might still be leaky/crashy.  It's difficult to tell.  I think it's a vast improvement.  I updated all of the HTTP mess to use it.

''--Cory''